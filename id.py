# -*- coding: utf-8 -*-
"""Id.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eeB55EpDYlbvFWn6ZWeQEQUDGDDCA0Dg
"""

!pip install -q streamlit

!pip install easyocr

!pip install db-sqlite3



# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import easyocr
# import re
# import tempfile
# import sqlite3
# import pandas as pd
# from PIL import Image
# 
# st.header('Project of Business Card Extraction')
# 
# uploaded_file = st.file_uploader("Choose an image...",  type=["png", "jpeg", "jpg"])
# # If an image was uploaded, display it and its name
# if uploaded_file is not None:
#     image = Image.open(uploaded_file)  
#     # Display the image in Streamlit
#     st.image(image, caption="Uploaded image", use_column_width=True)
#     with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
#         tmp_file.write(uploaded_file.getvalue())
#         file_path = tmp_file.name
#     reader = easyocr.Reader(['en'])
#     result = reader.readtext(file_path, detail=0)
#     list = result
#     num = '(\+||s)(\d+\-)'
#     mail = '\w+@\w+\.com'
#     website = '\w+(.com|com)'
#     add = '(\d+\w)'
#     pin = '(\w+)\s(\d{6})'
#     f = []
#     for i in list:
#        if re.match(num,i) or re.findall(mail,i) or re.findall(website,i) or re.match(add,i) or re.match(pin,i) :
#           f.append(i)
#     number = []
#     web = []
#     mailid = []
#     address = []
#     state = []
#     for i in list:
#       if re.findall(num,i):
#          number.append(i)
#       elif re.findall(mail,i):
#          mailid.append(i)
#       elif re.findall(website,i):
#          web.append(i)
#       elif re.match(add,i):
#          address.append(i)
#       elif re.match(pin,i):
#          state.append(i)
#     if state == []:
#        address = ''.join(address)
#        parts = address.split(';')
#        address = parts[0]
#        state = parts[1]
#     number = ''.join(number)
#     web = ''.join(web)
#     mailid = ''.join(mailid)
#     address = ''.join(address)
#     state = ''.join(state)
#     f2 =[]
#     for i in list:
#       if i not in f:
#         f2.append(i)
#     name = f2[0]
#     role = f2[1]
#     if len(f2) == 4 :
#       company = f2[2] + ' ' + f2[3]
#     else:
#       company = f2[2]
# 
#     data = (name,role,company,number,mailid,web,address,state)
#     if st.button('Extract Data'):
#        datas = {'Name': name,
#                 'Role': role,
#                 'Company': company,
#                 'Number' : number,
#                 'Mail_id' : mailid,
#                 'Website' : web,
#                 'Address' : address,
#                 'State_and_Pincode' : state}
#        df = pd.DataFrame(datas, index=[0])
#        st.table(df)
#     
#     
#     table_name = st.text_input('Give a table name')
#     
#     
#     conn = sqlite3.connect('cards.db')
#     if  st.button('Store into Database'):
#           
#           
#           c = conn.cursor()
#           c.execute(f'''CREATE TABLE IF NOT EXISTS {table_name}
#              (name varchar(50), role varchar(50), company varchar(50), number varchar(50),
#               mailid varchar(50), web varchar(50), address varchar(50), state_and_pincode varchar(50))''')
#           c.execute(f"INSERT INTO {table_name} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", data)
#           conn.commit()
#           st.write('Successfully Stored')
#        
#     if st.button('View Tables'):
#           c = conn.cursor()
#           c.execute("SELECT name FROM sqlite_master WHERE type='table'")
#           table_names = [row[0] for row in c.fetchall()]
#           radio = st.sidebar.write('List of Tables:' ,table_names)
#           
#        
#     table_name = st.text_input('Inter Table Name')
#     
#     if st.button('View data'):
#          
#          df = pd.read_sql_query(f'SELECT * FROM {table_name}', conn)
#          st.dataframe(df)
#

!npm install localtunnel

!streamlit run /content/app.py &>/content/logs.txt &

!npx localtunnel --port 8501







